name: Build images for PRs
on:
  pull_request:
    types:
      - opened
      - reopened
      - closed
      - synchronize
permissions:
  pull-requests: read
env:
  IMAGE_REPO_DSPO: data-science-pipelines-operator
  SOURCE_BRANCH: ${{ github.event.pull_request.head.sha }}
  QUAY_ORG: hukhan
  QUAY_ID: ${{ secrets.QUAY_ID }}
  QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}
  TARGET_IMAGE_TAG: pr-${{ github.event.pull_request.number }}
jobs:
  build-pr-image:
    if: github.event.pull_request.state == 'open'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/build
        with:
          OVERWRITE: true
          IMAGE_REPO: ${{ env.IMAGE_REPO_DSPO }}
          DOCKERFILE: Dockerfile
          GH_REPO: ${{ github.repository }}
      - name: Post build
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          PR=${{ github.event.pull_request.number }}
          git config user.email "140449482+dsp-developers@users.noreply.github.com"
          git config user.name "dsp-developers"
          msg="""
          A new image has been built to help with testing out this PR: `quay.io/${{ env.QUAY_ORG }}/data-science-pipelines-operator:${{ env.TARGET_IMAGE_TAG }}`
          To use this image run the following: 
          ```bash
          cd $(mktemp -d) 
          git clone git@github.com:opendatahub-io/data-science-pipelines-operator.git
          git fetch origin pull/${PR}/head
          git checkout -b pullrequest ${SOURCE_BRANCH}
          ```
          """
          gh pr comment ${PR} --body ${msg}

  clean-pr-images:
    if: github.event.pull_request.state == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete PR image
        shell: bash
        run: |
          tag=$(curl --request GET 'https://quay.io/api/v1/repository/${{ env.QUAY_ORG }}/${{ env.IMAGE_REPO_DSPO }}/tag/?specificTag=${{ env.TARGET_IMAGE_TAG }}')
          exists=$(echo ${tag} | yq .tags - | yq any)
          IMAGE=quay.io/${{ env.QUAY_ORG }}/${{ env.IMAGE_REPO_DSPO }}:${{ env.TARGET_IMAGE_TAG }}
          if [[ "$exists" == "true" ]]; then
            echo "PR Closed deleting image...${{ env.IMAGE }}."
            skopeo delete --creds ${{ env.QUAY_ID }}:${{ env.QUAY_TOKEN }} docker://${IMAGE}
          else
            echo "Deletion of image ${IMAGE} skipped because image already does not exist."
          fi